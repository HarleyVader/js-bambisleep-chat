<!DOCTYPE html>
<html lang="en">
<head>
    <%- include('./partials/head') %>
    <title>Service Unavailable | BambiSleep</title>
    <style>
        .error-container {
            max-width: 800px;
            margin: 40px auto;
            padding: 20px;
            background-color: var(--bg-color-secondary);
            border-radius: 8px;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1), 0 0 15px rgba(var(--tertiary-color-rgb), 0.3);
            text-align: center;
        }
        
        .error-status {
            font-size: 4rem;
            color: var(--accent-color);
            margin-bottom: 20px;
            text-shadow: 0 0 10px rgba(var(--button-color-rgb), 0.8);
        }
        
        .error-message {
            margin-bottom: 30px;
            font-size: 1.2rem;
            color: var(--text-color);
        }
        
        .retry-countdown {
            font-size: 1.5rem;
            color: var(--accent-color);
            margin: 20px 0;
        }
        
        .retry-button, .back-button {
            display: inline-block;
            padding: 10px 20px;
            margin: 10px;
            border-radius: 5px;
            text-decoration: none;
            color: var(--primary-alt);
            font-weight: bold;
            transition: all 0.3s ease;
            border: none;
            cursor: pointer;
        }
        
        .back-button {
            background-color: var(--button-color);
        }
        
        .retry-button {
            background-color: rgba(var(--nav-color-rgb), 0.7);
            color: var(--nav-alt);
            min-width: 120px;
        }
        
        .retry-button:disabled {
            opacity: 0.5;
            cursor: not-allowed;
        }
        
        .back-button:hover, .retry-button:hover:not(:disabled) {
            background-color: var(--tertiary-color);
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        }
        
        .error-actions {
            display: flex;
            justify-content: center;
            margin-top: 30px;
            flex-wrap: wrap;
        }
        
        .loading-spinner {
            display: inline-block;
            width: 20px;
            height: 20px;
            border: 3px solid rgba(255, 255, 255, 0.3);
            border-radius: 50%;
            border-top-color: #fff;
            animation: spin 1s ease-in-out infinite;
            margin-left: 8px;
            vertical-align: middle;
        }
        
        @keyframes spin {
            to { transform: rotate(360deg); }
        }
    </style>
</head>
<body>
    <%- include('./partials/nav') %>
    
    <div class="container">
        <div class="error-container">
            <div class="error-status">503</div>
            <div class="error-message">Service Temporarily Unavailable</div>
            
            <p>The server is currently undergoing maintenance or experiencing high traffic.</p>
            <p>Please try again in a few moments.</p>
            
            <div class="retry-countdown" id="countdown-timer">
                Retrying in <span id="countdown"><%= retryAfter %></span> seconds
            </div>
            
            <div class="error-actions">
                <a href="/" class="back-button">Back to Home</a>
                <button id="retry-button" class="retry-button" disabled>
                    Retry Now
                </button>
            </div>
        </div>
    </div>
    
    <div class="notification-area" id="notification-area"></div>
    
    <%- include('./partials/footer', { 
        footer: {
            logo: {
                url: "https://brandynette.xxx/",
                image: "/gif/brandynette.gif",
                alt: "Brandynette.xxx"
            },
            tagline: "Our services are taking a little nap. They'll wake up soon!"
        }
    }) %>
    
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const countdownEl = document.getElementById('countdown');
            const retryButton = document.getElementById('retry-button');
            let secondsLeft = parseInt(countdownEl.textContent);
            
            // Countdown timer
            const countdownInterval = setInterval(() => {
                secondsLeft--;
                countdownEl.textContent = secondsLeft;
                
                if (secondsLeft <= 0) {
                    clearInterval(countdownInterval);
                    retryButton.disabled = false;
                    document.getElementById('countdown-timer').innerHTML = 'Ready to retry!';
                    
                    // Auto retry once
                    tryReconnect();
                }
            }, 1000);
            
            // Retry button handler
            retryButton.addEventListener('click', () => {
                tryReconnect();
            });
            
            function tryReconnect() {
                const originalText = retryButton.textContent;
                retryButton.innerHTML = 'Connecting... <span class="loading-spinner"></span>';
                retryButton.disabled = true;
                
                // Try to fetch the current page to check if service is back
                fetch(window.location.href, {cache: 'no-store'})
                    .then(response => {
                        if (response.ok) {
                            // Service is back, reload the page
                            window.location.reload();
                        } else {
                            // Still getting errors, reset button
                            showNotification('Service still unavailable. Please try again later.', 'error');
                            retryButton.innerHTML = originalText;
                            retryButton.disabled = false;
                        }
                    })
                    .catch(err => {
                        // Network error, reset button
                        showNotification('Cannot connect to server. Please try again later.', 'error');
                        retryButton.innerHTML = originalText;
                        retryButton.disabled = false;
                    });
            }
            
            // Notification function
            function showNotification(message, type = 'info', duration = 5000) {
                const notificationArea = document.getElementById('notification-area');
                
                // Create notification element
                const notification = document.createElement('div');
                notification.className = `notification ${type}`;
                notification.textContent = message;
                
                // Add to notification area
                notificationArea.appendChild(notification);
                
                // Set timeout to remove
                setTimeout(() => {
                    notification.classList.add('fade-out');
                    notification.addEventListener('animationend', () => {
                        notification.remove();
                    });
                }, duration);
                
                return notification;
            }
        });
    </script>
</body>
</html>