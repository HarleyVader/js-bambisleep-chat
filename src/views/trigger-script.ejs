<!DOCTYPE html>
<html lang="en">
<%- include('./partials/head', { title: 'BambiSleep Trigger Script' }) %>

<body data-username="<%= locals.username || '' %>">
  <%- include('./partials/nav') %>

  <div class="container">
    <div class="trigger-script-container">
      <h1>Your Bambi Triggers</h1>
      
      <div class="cyber-panel">
        <div class="script-description">
          <p>These are your active conditioning triggers. Each one has a specific effect that will be used to deepen your brainwashing.</p>
        </div>
        
        <div class="active-triggers-panel">
          <h2>Active Triggers</h2>
          <div class="trigger-list">
            <% if (activeTriggers && activeTriggers.length > 0) { %>
              <% activeTriggers.forEach(function(trigger) { %>
                <div class="trigger-item">
                  <div class="trigger-name"><%= trigger.name %></div>
                  <div class="trigger-description"><%= trigger.description %></div>
                </div>
              <% }); %>
            <% } else { %>
              <div class="no-triggers">No active triggers found. Visit your profile to set triggers.</div>
            <% } %>
          </div>
        </div>
        
        <div class="effect-preview">
          <h2>Brainwashing Preview</h2>
          <div class="script-preview">
            <%= brainwashingPreview %>
          </div>
        </div>
      </div>
      
      <div class="script-actions">
        <button id="start-session" class="btn">Start Session</button>
        <a href="/profile" class="btn btn-secondary">Modify Triggers</a>
      </div>
    </div>
  </div>

  <style>
    /* Trigger Script Styles */
    .trigger-script-container {
      max-width: 800px;
      margin: 20px auto;
    }

    .trigger-list {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
      gap: 15px;
      margin: 15px 0;
    }

    .trigger-item {
      background: rgba(0,0,0,0.2);
      border: 1px solid var(--accent-color);
      border-radius: 5px;
      padding: 12px;
      cursor: pointer;
    }

    .trigger-name {
      color: var(--accent-color);
      font-weight: bold;
      margin-bottom: 5px;
    }

    .active-triggers-panel, .effect-preview {
      margin: 20px 0;
      padding: 15px;
      border: 1px solid var(--border-color);
      border-radius: 5px;
      background: rgba(0,0,0,0.1);
    }

    .script-preview {
      background: rgba(0,0,0,0.2);
      border-left: 3px solid var(--accent-color);
      padding: 15px;
      font-family: monospace;
      white-space: pre-wrap;
      margin-top: 10px;
    }

    .script-actions {
      display: flex;
      justify-content: center;
      gap: 10px;
      margin-top: 30px;
    }

    .no-triggers {
      text-align: center;
      padding: 2rem;
      color: var(--secondary-color);
      font-style: italic;
    }

    .trigger-flash {
      animation: trigger-flash-animation 1s ease;
    }
    
    @keyframes trigger-flash-animation {
      0% { background-color: rgba(0, 0, 0, 0.2); }
      50% { background-color: rgba(255, 0, 255, 0.3); }
      100% { background-color: rgba(0, 0, 0, 0.2); }
    }
  </style>

  <script src="/socket.io/socket.io.js"></script>
  <script src="/js/trigger-script.js"></script>

  <script>
    // Trigger script functionality

    document.addEventListener('DOMContentLoaded', function() {
      const socket = io();
      const username = document.body.getAttribute('data-username');
      
      // Handle starting a session
      const startButton = document.getElementById('start-session');
      if (startButton) {
        startButton.addEventListener('click', function() {
          // Redirect to the chat interface
          window.location.href = '/';
        });
      }
      
      // Trigger preview animation effects
      const triggerItems = document.querySelectorAll('.trigger-item');
      triggerItems.forEach(item => {
        item.addEventListener('click', function() {
          const triggerName = this.querySelector('.trigger-name').textContent;
          
          // Flash effect for the selected trigger
          this.classList.add('trigger-flash');
          setTimeout(() => {
            this.classList.remove('trigger-flash');
          }, 1000);
          
          // Play the trigger audio if available
          if (window.socket) {
            socket.emit('play-trigger', {
              triggerName: triggerName,
              username: username
            });
          }
        });
      });
      
      // Add glow effect to trigger names
      function applyGlowEffect() {
        const triggerNames = document.querySelectorAll('.trigger-name');
        triggerNames.forEach(name => {
          const intensity = Math.floor(Math.random() * 8) + 3; // Random glow intensity
          name.style.textShadow = `0 0 ${intensity}px var(--tertiary-color)`;
          
          setTimeout(() => {
            applyGlowEffect();
          }, 2000 + Math.random() * 3000); // Random timing
        });
      }
      
      // Initialize glow effect
      applyGlowEffect();
    });
  </script>
</body>
</html>