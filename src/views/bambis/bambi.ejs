<!DOCTYPE html>
<html lang="en">

<head>
    <title>Profile Page</title>
    <%- include('../../views/partials/head.ejs') %>
</head>
<style>
    * {
        box-sizing: border-box;
        margin: 0;
        padding: 0;
    }

    body {
        font-family: Arial, sans-serif;
        line-height: 1.6;
        color: #333;
        background-color: #f4f4f4;
    }

    .profile-container {
        max-width: 1000px;
        margin: 0 auto;
        background: white;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    }

    .header-container {
        position: relative;
        width: 100%;
        height: 250px;
        overflow: hidden;
    }

    #header-img {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }

    .avatar-container {
        position: relative;
        margin-top: -75px;
        margin-left: 30px;
        width: 150px;
        height: 150px;
        border-radius: 50%;
        overflow: hidden;
        border: 5px solid white;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
    }

    #avatar-img {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }

    .profile-details {
        padding: 20px 30px;
    }

    .editable-section {
        margin: 20px 0;
        padding: 15px;
        background: #f9f9f9;
        border-radius: 5px;
        position: relative;
    }

    .editable {
        min-height: 50px;
        padding: 10px;
        border: 1px solid transparent;
    }

    .editable[contenteditable="true"] {
        border: 1px solid #ddd;
        background: white;
        outline: none;
    }

    .edit-btn {
        padding: 5px 10px;
        background: #4285f4;
        color: white;
        border: none;
        border-radius: 3px;
        cursor: pointer;
        position: absolute;
        right: 10px;
        top: 10px;
    }

    .edit-btn:hover {
        background: #3367d6;
    }

    h1 {
        margin-bottom: 15px;
    }

    h2 {
        font-size: 18px;
        margin-bottom: 10px;
    }
    
    .save-status {
        position: fixed;
        top: 20px;
        right: 20px;
        padding: 10px 15px;
        border-radius: 5px;
        background: #4CAF50;
        color: white;
        display: none;
        z-index: 1000;
    }
    
    .save-status.error {
        background: #F44336;
    }
</style>

<body>
    <%- include('../../views/partials/nav.ejs') %>
    
    <div class="save-status" id="save-status">Changes saved successfully</div>
    
    <div class="profile-container">
        <!-- Header Image -->
        <div class="header-container">
            <img id="header-img" src="<%= bambi ? bambi.headerImageUrl : 'https://via.placeholder.com/1000x250' %>" alt="Profile header">
            <button class="edit-btn" id="edit-header">Edit Header</button>
            <input type="file" id="header-upload" accept="image/*" hidden>
        </div>

        <!-- Avatar -->
        <div class="avatar-container">
            <img id="avatar-img" src="<%= bambi ? bambi.profilePictureUrl : 'https://via.placeholder.com/150' %>" alt="Profile avatar">
            <button class="edit-btn" id="edit-avatar">Edit</button>
            <input type="file" id="avatar-upload" accept="image/*" hidden>
        </div>

        <!-- Profile Details -->
        <div class="profile-details">
            <h1><%= bambi ? (bambi.displayName || bambi.username) : 'My Profile' %></h1>

            <div class="editable-section">
                <h2>About</h2>
                <div id="about" class="editable" contenteditable="false"><%= bambi ? bambi.about : 'Click edit to add your about information' %></div>
                <button class="edit-btn" id="edit-about">Edit</button>
            </div>

            <div class="editable-section">
                <h2>Description</h2>
                <div id="description" class="editable" contenteditable="false"><%= bambi ? bambi.description : 'Click edit to add your description' %></div>
                <button class="edit-btn" id="edit-description">Edit</button>
            </div>
        </div>
    </div>

    <script src="/socket.io/socket.io.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            // Connect to Socket.io
            const socket = io();
            
            // Get username from URL or localStorage
            const urlPath = window.location.pathname;
            const username = urlPath.split('/bambis/')[1];
            
            // Setup edit buttons for text elements
            setupTextEditing('about');
            setupTextEditing('description');

            // Setup image uploads
            setupImageUpload('avatar');
            setupImageUpload('header');
            
            // Load saved data from localStorage as fallback
            loadProfileData();
            
            // Show save status
            function showSaveStatus(message, isError = false) {
                const statusElement = document.getElementById('save-status');
                statusElement.textContent = message;
                
                if (isError) {
                    statusElement.classList.add('error');
                } else {
                    statusElement.classList.remove('error');
                }
                
                statusElement.style.display = 'block';
                
                setTimeout(() => {
                    statusElement.style.display = 'none';
                }, 3000);
            }

            function setupTextEditing(elementId) {
                const element = document.getElementById(elementId);
                const editButton = document.getElementById(`edit-${elementId}`);

                editButton.addEventListener('click', () => {
                    const isEditing = element.contentEditable === 'true';

                    if (isEditing) {
                        // Save the content
                        element.contentEditable = 'false';
                        editButton.textContent = 'Edit';
                        saveProfileData();
                    } else {
                        // Enable editing
                        element.contentEditable = 'true';
                        element.focus();
                        editButton.textContent = 'Save';
                    }
                });
            }

            function setupImageUpload(type) {
                const uploadInput = document.getElementById(`${type}-upload`);
                const editButton = document.getElementById(`edit-${type}`);
                const image = document.getElementById(`${type}-img`);

                editButton.addEventListener('click', () => {
                    uploadInput.click();
                });

                uploadInput.addEventListener('change', (event) => {
                    if (event.target.files && event.target.files[0]) {
                        const reader = new FileReader();

                        reader.onload = (e) => {
                            image.src = e.target.result;
                            saveProfileData();
                        };

                        reader.readAsDataURL(event.target.files[0]);
                    }
                });
            }

            function saveProfileData() {
                // Get data from form
                const profileData = {
                    about: document.getElementById('about').innerHTML,
                    description: document.getElementById('description').innerHTML,
                    profilePictureUrl: document.getElementById('avatar-img').src,
                    headerImageUrl: document.getElementById('header-img').src
                };

                // Save to localStorage as backup
                localStorage.setItem('profileData', JSON.stringify(profileData));
                
                // Save to database via API
                fetch('/bambis/update-profile', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(profileData)
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        showSaveStatus('Profile saved successfully!');
                        
                        // Notify other clients via socket
                        socket.emit('profile:update', {
                            field: 'profile',
                            value: profileData
                        });
                    } else {
                        showSaveStatus(data.message || 'Failed to save profile', true);
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    showSaveStatus('Error saving profile. Please try again.', true);
                });
            }

            function loadProfileData() {
                // This is now just a fallback, as the server should render the data
                const savedData = localStorage.getItem('profileData');

                if (savedData) {
                    const profileData = JSON.parse(savedData);
                    
                    // Only use localStorage if elements are empty or have default text
                    const aboutEl = document.getElementById('about');
                    if (aboutEl.innerHTML.includes('Click edit to add your about')) {
                        aboutEl.innerHTML = profileData.about;
                    }
                    
                    const descEl = document.getElementById('description');
                    if (descEl.innerHTML.includes('Click edit to add your description')) {
                        descEl.innerHTML = profileData.description;
                    }
                    
                    // Check if images are placeholders
                    const avatarImg = document.getElementById('avatar-img');
                    if (avatarImg.src.includes('placeholder')) {
                        avatarImg.src = profileData.avatar;
                    }
                    
                    const headerImg = document.getElementById('header-img');
                    if (headerImg.src.includes('placeholder')) {
                        headerImg.src = profileData.header;
                    }
                }
            }
            
            // Listen for profile update events
            socket.on('profile:updated', data => {
                showSaveStatus('Profile updated successfully!');
            });
            
            socket.on('profile error', message => {
                showSaveStatus(message, true);
            });
        });
    </script>
</body>
</html>