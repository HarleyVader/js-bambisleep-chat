<!DOCTYPE html>
<html lang="en">
<head>
    <%- include('../views/partials/head.ejs') %>
    <title>BambiSleep Community Profiles</title>
    <style>
        .bambis-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 1.5rem;
            margin-top: 2rem;
        }
        
        .profile-card {
            position: relative;
            overflow: hidden;
            transition: all 0.3s ease;
            padding: 20px;
        }
        
        .profile-card:hover {
            transform: translateY(-10px) scale(1.03);
            box-shadow: 0 0 25px var(--tertiary-color);
        }
        
        .profile-card:hover .profile-avatar img {
            transform: scale(1.1);
        }
        
        .profile-card:hover::before {
            opacity: 1;
        }
        
        .profile-card::before {
            content: '';
            position: absolute;
            top: -2px;
            left: -2px;
            right: -2px;
            bottom: -2px;
            background: linear-gradient(45deg, var(--button-color), var(--tertiary-color), var(--nav-alt));
            z-index: -1;
            opacity: 0.7;
            transition: opacity 0.3s ease;
            border-radius: 10px;
            filter: blur(8px);
        }
        
        .profile-avatar {
            width: 120px;
            height: 120px;
            border-radius: 50%;
            overflow: hidden;
            margin: 0 auto 1rem;
            border: 3px solid var(--tertiary-color);
            box-shadow: 0 0 15px var(--button-color);
        }
        
        .profile-avatar img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            transition: transform 0.5s ease;
        }
        
        .profile-name {
            text-align: center;
            margin-bottom: 0.5rem;
        }
        
        .profile-stats {
            display: flex;
            justify-content: space-around;
            margin-bottom: 1rem;
        }
        
        .stat {
            text-align: center;
        }
        
        .profile-description {
            font-style: italic;
            color: var(--primary-alt);
            text-align: center;
            margin-bottom: 1rem;
            padding: 0 1rem;
            max-height: 60px;
            overflow: hidden;
            text-overflow: ellipsis;
            display: -webkit-box;
            -webkit-line-clamp: 2;
            -webkit-box-orient: vertical;
        }
        
        .create-profile-section {
            margin-bottom: 2rem;
            text-align: center;
        }
        
        #create-profile-form {
            display: flex;
            max-width: 500px;
            margin: 0 auto;
        }
        
        #bambiname-input {
            flex: 1;
            margin-right: 10px;
        }
        
        .heart-button {
            background-color: transparent;
            border: none;
            color: var(--button-color);
            font-size: 1.5rem;
            cursor: pointer;
            transition: transform 0.3s ease;
            animation: none;
        }
        
        .heart-button:hover {
            transform: scale(1.2);
        }
        
        .heart-button.active {
            color: var(--tertiary-color);
            animation: heartbeat 1s infinite;
        }
        
        @keyframes heartbeat {
            0%, 100% { transform: scale(1); }
            50% { transform: scale(1.2); }
        }
    </style>
</head>
<body>
    <%- include('../views/partials/nav.ejs') %>
    
    <div class="container">
        <h1>BambiSleep Community</h1>
        
        <div class="create-profile-section">
            <h2>Join Our Community</h2>
            <p>Create your Bambi profile and connect with other Bambis</p>
            
            <form id="create-profile-form">
                <input type="text" id="bambiname-input" placeholder="Your BambiName" required>
                <button type="submit">Create Profile</button>
            </form>
        </div>
        
        <div class="bambis-grid">
            <% if (bambis && bambis.length > 0) { %>
                <% bambis.forEach(bambi => { %>
                    <div class="profile-card" style="background-color: <%= bambi.profileTheme?.primaryColor || 'var(--transparent)' %>;">
                        <div class="profile-avatar">
                            <img src="<%= bambi.profilePictureUrl %>" alt="<%= bambi.displayName || bambi.username %>">
                        </div>
                        <h3 class="profile-name" style="color: <%= bambi.profileTheme?.textColor || 'var(--button-color)' %>">
                            <%= bambi.displayName || bambi.username %>
                        </h3>
                        <div class="profile-stats">
                            <div class="stat">
                                <div class="stat-value">LVL <%= bambi.level %></div>
                                <div class="stat-label">Level</div>
                            </div>
                            <div class="stat heart-stat" data-username="<%= bambi.username %>">
                                <button class="heart-button <% if (bambi.userHasLiked) { %>active<% } %>" data-username="<%= bambi.username %>">
                                    ❤️
                                </button>
                                <div class="stat-value heart-count"><%= bambi.hearts.count %></div>
                                <div class="stat-label">Hearts</div>
                            </div>
                            <div class="stat">
                                <div class="stat-value"><%= bambi.followers.length %></div>
                                <div class="stat-label">Followers</div>
                            </div>
                        </div>
                        <div class="profile-description" style="color: <%= bambi.profileTheme?.textColor || 'var(--primary-alt)' %>">
                            <%= bambi.description || 'A mysterious Bambi...' %>
                        </div>
                        <div class="text-center">
                            <a href="/bambis/<%= bambi.username %>" class="btn">View Profile</a>
                        </div>
                    </div>
                <% }); %>
            <% } else { %>
                <div class="no-profiles-message">
                    <p>No bambi profiles found. Be the first to create one!</p>
                </div>
            <% } %>
        </div>
    </div>
    
    <%- include('../views/partials/footer.ejs') %>
    
    <script src="/socket.io/socket.io.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Connect to Socket.io
            const socket = io();
            
            // Handle profile creation
            const createProfileForm = document.getElementById('create-profile-form');
            
            createProfileForm.addEventListener('submit', function(e) {
                e.preventDefault();
                
                const bambiname = document.getElementById('bambiname-input').value.trim();
                if (!bambiname) return;
                
                // Validate bambiname (alphanumeric + spaces, 3-30 chars)
                const nameRegex = /^[a-zA-Z0-9 ]{3,30}$/;
                if (!nameRegex.test(bambiname)) {
                    alert('BambiName must be 3-30 characters with only letters, numbers and spaces.');
                    return;
                }
                
                // Set cookie for bambiname
                document.cookie = `bambiname=${encodeURIComponent(bambiname)}; path=/`;
                
                // Redirect to create profile page
                window.location.href = `/bambis/create`;
            });
            
            // Handle heart buttons
            document.querySelectorAll('.heart-button').forEach(button => {
                button.addEventListener('click', async function(e) {
                    e.preventDefault();
                    
                    const username = this.dataset.username;
                    try {
                        const response = await fetch(`/bambis/api/heart/${username}`, {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            }
                        });
                        
                        const data = await response.json();
                        if (data.success) {
                            // Update UI
                            this.classList.toggle('active', data.hearted);
                            
                            const heartStat = document.querySelector(`.heart-stat[data-username="${username}"]`);
                            const heartCount = heartStat.querySelector('.heart-count');
                            heartCount.textContent = data.heartCount;
                            
                            // Emit socket event for real-time updates
                            socket.emit('profile:heart', {
                                username: username,
                                count: data.heartCount,
                                hearted: data.hearted
                            });
                        } else {
                            alert(data.message || 'Error hearting profile');
                        }
                    } catch (error) {
                        console.error('Error:', error);
                        alert('Error processing your request');
                    }
                });
            });
            
            // Listen for real-time updates
            socket.on('profile:hearted', data => {
                const heartStat = document.querySelector(`.heart-stat[data-username="${data.username}"]`);
                if (heartStat) {
                    const heartCount = heartStat.querySelector('.heart-count');
                    heartCount.textContent = data.count;
                }
            });
            
            // Listen for new profile creation
            socket.on('profile:created', data => {
                // You could either refresh the page or dynamically add the new profile
                // For simplicity, refresh the page
                window.location.reload();
            });
        });
    </script>
</body>
</html>